node n1 {
    type router
    model router
    network-config {
	hostname n1
	!
	interface eth2
	 ip address 10.0.0.254/24
	!
	interface eth1
	 ip address 196.168.0.21/30
	!
	interface eth0
	 ip address 196.168.0.1/30
	!
    }
    canvas c1
    iconcoords {323.0 234.0}
    labelcoords {371.0 264.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n5}
    interface-peer {eth2 n8}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.1/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.21/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth2
	  ip address 10.0.0.254/24
	  ip address 10.0.1.190/26
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.1
	  network 196.168.0.1/30 area 0
	  network 196.168.0.21/30 area 0
	  network 10.0.0.254/24 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.1
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	  interface eth2 area 0.0.0.0
	!
	ip route 10.0.1.0/25 196.168.0.2
	ip route 10.0.1.192/27 196.168.0.22
	ip route 10.0.1.224/27 196.168.0.22
	!
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.1
	
	}
    }
    custom-config {
	custom-config-id service:IPForward
	custom-command IPForward
	config {
	files=('ipforward.sh', )
	}
    }
    custom-config {
	custom-config-id service:IPForward:ipforward.sh
	custom-command ipforward.sh
	config {
	#!/bin/sh
	# auto-generated by IPForward service (utility.py)
	sysctl -w net.ipv4.conf.all.forwarding=1
	sysctl -w net.ipv4.conf.default.forwarding=1
	sysctl -w net.ipv6.conf.all.forwarding=1
	sysctl -w net.ipv6.conf.default.forwarding=1
	sysctl -w net.ipv4.conf.all.send_redirects=0
	sysctl -w net.ipv4.conf.default.send_redirects=0
	sysctl -w net.ipv4.conf.all.rp_filter=0
	sysctl -w net.ipv4.conf.default.rp_filter=0
	sysctl -w net.ipv4.conf.eth0.forwarding=1
	sysctl -w net.ipv4.conf.eth0.send_redirects=0
	sysctl -w net.ipv4.conf.eth0.rp_filter=0
	sysctl -w net.ipv4.conf.eth1.forwarding=1
	sysctl -w net.ipv4.conf.eth1.send_redirects=0
	sysctl -w net.ipv4.conf.eth1.rp_filter=0
	sysctl -w net.ipv4.conf.eth2.forwarding=1
	sysctl -w net.ipv4.conf.eth2.send_redirects=0
	sysctl -w net.ipv4.conf.eth2.rp_filter=0
	
	}
    }
    services {zebra IPForward}
}

node n2 {
    type router
    model router
    network-config {
	hostname n2
	!
	interface eth3
	 ip address 10.0.1.126/25
	!
	interface eth2
	 ip address 196.168.0.25/30
	!
	interface eth1
	 ip address 196.168.0.5/30
	!
	interface eth0
	 ip address 196.168.0.2/30
	!
    }
    canvas c1
    iconcoords {619.0 234.0}
    labelcoords {619.0 266.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n7}
    interface-peer {eth2 n6}
    interface-peer {eth3 n13}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.2/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.5/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth2
	  ip address 196.168.0.25/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth3
	  ip address 10.0.1.126/25
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.2
	  network 196.168.0.2/30 area 0
	  network 196.168.0.5/30 area 0
	  network 196.168.0.25/30 area 0
	  network 10.0.1.126/25 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.2
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	  interface eth2 area 0.0.0.0
	  interface eth3 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.1
	ip route 10.0.1.128/26 196.168.0.1
	ip route 10.0.1.192/27 196.168.0.26
	ip route 10.0.1.224/27 196.168.0.6
	!
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.1
	
	}
    }
    services {zebra IPForward}
}

node n3 {
    type router
    model router
    network-config {
	hostname n3
	!
	interface eth2
	 ip address 196.168.0.30/30
	!
	interface eth0
	 ip address 196.168.0.14/30
	!
	interface eth3
	 ip address 10.0.1.222/27
	!
	interface eth1
	 ip address 196.168.0.17/30
	!
    }
    canvas c1
    iconcoords {323.0 456.0}
    labelcoords {323.0 488.0}
    interface-peer {eth1 n5}
    interface-peer {eth2 n6}
    interface-peer {eth3 n12}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.14/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.17/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth2
	  ip address 196.168.0.28/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth3
	  ip address 10.0.1.222/27
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.14
	  network 196.168.0.14/30 area 0
	  network 196.168.0.17/30 area 0
	  network 196.168.0.28/30 area 0
	  network 10.0.1.222/27 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.14
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	  interface eth2 area 0.0.0.0
	  interface eth3 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.18
	ip route 10.0.1.128/26 196.168.0.18
	ip route 10.0.1.0/25 196.168.0.29
	ip route 10.0.1.224/27 196.168.0.13
	!
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.13
	
	}
    }
    services {zebra IPForward}
    interface-peer {eth0 n4}
}

node n5 {
    type router
    model router
    network-config {
	hostname n5
	!
	interface eth1
	 ip address 196.168.0.18/30
	!
	interface eth0
	 ip address 196.168.0.22/30
	!
    }
    canvas c1
    iconcoords {260.0 335.0}
    labelcoords {216.0 339.0}
    interface-peer {eth0 n1}
    interface-peer {eth1 n3}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.22/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.18/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.22
	  network 196.168.0.22/30 area 0
	  network 196.168.0.18/30 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.22
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.21
	ip route 10.0.1.128/26 196.168.0.21
	ip route 10.0.1.0/25 196.168.0.21
	ip route 10.0.1.192/27 196.168.0.17
	ip route 10.0.1.224/27 196.168.0.17
	!
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.21
	
	}
    }
    services {zebra IPForward}
}

node n6 {
    type router
    model router
    network-config {
	hostname n6
	!
	interface eth1
	 ip address 196.168.0.26/30
	!
	interface eth0
	 ip address 196.168.0.29/30
	!
    }
    canvas c1
    iconcoords {466.0 350.0}
    labelcoords {504.0 384.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n2}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.29/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.26/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.29
	  network 196.168.0.29/30 area 0
	  network 196.168.0.26/30 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.29
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.25
	ip route 10.0.1.128/26 196.168.0.25
	ip route 10.0.1.0/25 196.168.0.25
	ip route 10.0.1.192/27 196.168.0.30
	ip route 10.0.1.224/27 196.168.0.30
	!
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.29
	
	}
    }
    services {zebra IPForward}
}

node n7 {
    type router
    model router
    network-config {
	hostname n7
	!
	interface eth1
	 ip address 196.168.0.9/30
	!
	interface eth0
	 ip address 196.168.0.6/30
	!
    }
    canvas c1
    iconcoords {667.0 344.0}
    labelcoords {667.0 376.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.6/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.9/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.6
	  network 196.168.0.6/30 area 0
	  network 196.168.0.9/30 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.6
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.5
	ip route 10.0.1.128/26 196.168.0.5
	ip route 10.0.1.0/25 196.168.0.5
	ip route 10.0.1.192/27 196.168.0.10
	ip route 10.0.1.224/27 196.168.0.10
	!
	
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.5
	
	}
    }
    services {zebra IPForward}
    interface-peer {eth1 n4}
}

node n8 {
    type lanswitch
    network-config {
	hostname n8
	!
	interface e6
	!
	interface e5
	!
	interface e4
	!
	interface e0
	!
	interface e3
	!
	interface e2
	!
	interface e1
	!
    }
    canvas c1
    iconcoords {197.0 174.0}
    labelcoords {197.0 198.0}
    interface-peer {e1 n15}
    interface-peer {e2 n14}
    interface-peer {e3 n16}
    interface-peer {e0 n19}
    interface-peer {e4 n17}
    interface-peer {e5 n18}
    interface-peer {e6 n1}
}

node n10 {
    type lanswitch
    network-config {
	hostname n10
	!
	interface e2
	!
	interface e1
	!
	interface e0
	!
    }
    canvas c1
    iconcoords {741.0 156.0}
    labelcoords {741.0 180.0}
    interface-peer {e0 n13}
    interface-peer {e1 n24}
    interface-peer {e2 n25}
}

node n12 {
    type lanswitch
    network-config {
	hostname n12
	!
	interface e4
	!
	interface e3
	!
	interface e2
	!
	interface e1
	!
	interface e0
	!
    }
    canvas c1
    iconcoords {249.0 543.0}
    labelcoords {283.0 545.0}
    interface-peer {e0 n3}
    interface-peer {e1 n22}
    interface-peer {e2 n21}
    interface-peer {e3 n23}
    interface-peer {e4 n20}
}

node n13 {
    type hub
    network-config {
	hostname n13
	!
	interface e4
	!
	interface e3
	!
	interface e2
	!
	interface e1
	!
	interface e0
	!
    }
    canvas c1
    iconcoords {812.0 207.0}
    labelcoords {792.0 231.0}
    interface-peer {e0 n2}
    interface-peer {e1 n10}
    interface-peer {e2 n26}
    interface-peer {e3 n28}
    interface-peer {e4 n27}
}

node n14 {
    type router
    model PC
    network-config {
	hostname n14
	!
	interface eth0
	 ip address 10.0.0.1/24
	!
    }
    canvas c1
    iconcoords {127.0 303.0}
    labelcoords {127.0 335.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    services {DefaultRoute}
}

node n15 {
    type router
    model PC
    network-config {
	hostname n15
	!
	interface eth0
	 ip address 10.0.0.2/24
	!
    }
    canvas c1
    iconcoords {63.0 231.0}
    labelcoords {63.0 263.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    services {DefaultRoute}
}

node n16 {
    type router
    model PC
    network-config {
	hostname n16
	!
	interface eth0
	 ip address 10.0.0.3/24
	!
    }
    canvas c1
    iconcoords {50.0 135.0}
    labelcoords {24.0 163.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.0.254
	
	}
    }
    services {DefaultRoute}
}

node n17 {
    type router
    model PC
    network-config {
	hostname n17
	!
	interface eth0
	 ip address 10.0.1.130/26
	!
    }
    canvas c1
    iconcoords {272.0 44.0}
    labelcoords {228.0 46.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.190
	}
    }
    services {DefaultRoute}
}

node n18 {
    type router
    model PC
    network-config {
	hostname n18
	!
	interface eth0
	 ip address 10.0.1.131/26
	!
    }
    canvas c1
    iconcoords {334.0 127.0}
    labelcoords {318.0 105.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.190
	
	}
    }
    services {DefaultRoute}
}

node n19 {
    type router
    model PC
    network-config {
	hostname n19
	!
	interface eth0
	 ip address 10.0.1.129/26
	!
    }
    canvas c1
    iconcoords {158.0 64.0}
    labelcoords {122.0 70.0}
    interface-peer {eth0 n8}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.190
	}
    }
    services {DefaultRoute}
}

node n20 {
    type router
    model PC
    network-config {
	hostname n20
	!
	interface eth0
	 ip address 10.0.1.195/27
	!
    }
    canvas c1
    iconcoords {121.0 574.0}
    labelcoords {121.0 606.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.222
	
	}
    }
    services {DefaultRoute DHCPClient}
}

node n21 {
    type router
    model PC
    network-config {
	hostname n21
	!
	interface eth0
	 ip address 10.0.1.194/27
	!
    }
    canvas c1
    iconcoords {228.16666666666669 635.5}
    labelcoords {228.16666666666669 667.5}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.222
	
	}
    }
    services {DefaultRoute DHCPClient}
}

node n22 {
    type router
    model PC
    network-config {
	hostname n22
	!
	interface eth0
	 ip address 10.0.1.193/27
	!
    }
    canvas c1
    iconcoords {363.0 574.0}
    labelcoords {363.0 606.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.222
	
	}
    }
    services {DefaultRoute}
}

node n23 {
    type router
    model PC
    network-config {
	hostname n23
	!
	interface eth0
	 ip address 10.0.1.196/27
	!
    }
    canvas c1
    iconcoords {168.0 485.0}
    labelcoords {168.0 517.0}
    interface-peer {eth0 n12}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.222
	
	}
    }
    services {DefaultRoute DHCPClient}
}

node n24 {
    type router
    model PC
    network-config {
	hostname n24
	!
	interface eth0
	 ip address 10.0.1.5/25
	!
    }
    canvas c1
    iconcoords {627.0 144.0}
    labelcoords {627.0 176.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.126
	
	}
    }
    services {DefaultRoute}
}

node n25 {
    type router
    model PC
    network-config {
	hostname n25
	!
	interface eth0
	 ip address 10.0.1.4/25
	!
    }
    canvas c1
    iconcoords {745.0 82.0}
    labelcoords {707.0 80.0}
    interface-peer {eth0 n10}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.126
	
	}
    }
    services {DefaultRoute}
}

node n26 {
    type router
    model PC
    network-config {
	hostname n26
	!
	interface eth0
	 ip address 10.0.1.3/25
	!
    }
    canvas c1
    iconcoords {867.0 111.0}
    labelcoords {909.0 137.0}
    interface-peer {eth0 n13}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.126
	
	}
    }
    services {DefaultRoute}
}

node n27 {
    type router
    model PC
    network-config {
	hostname n27
	!
	interface eth0
	 ip address 10.0.1.2/25
	!
    }
    canvas c1
    iconcoords {927.0 227.0}
    labelcoords {927.0 259.0}
    interface-peer {eth0 n13}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.126
	
	}
    }
    services {DefaultRoute}
}

node n28 {
    type router
    model PC
    network-config {
	hostname n28
	!
	interface eth0
	 ip address 10.0.1.1/25
	!
    }
    canvas c1
    iconcoords {828.0 295.0}
    labelcoords {828.0 327.0}
    interface-peer {eth0 n13}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.126
	
	}
    }
    services {DefaultRoute}
}

node n29 {
    type router
    model PC
    network-config {
	hostname n29
	!
	interface eth0
	 ip address 10.0.1.225/27
	!
    }
    canvas c1
    iconcoords {741.6666666666666 494.0}
    labelcoords {785.6666666666666 494.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.254
	
	}
    }
    interface-peer {eth0 n9}
}

node n30 {
    type router
    model PC
    network-config {
	hostname n30
	!
	interface eth0
	 ip address 10.0.1.226/27
	!
    }
    canvas c1
    iconcoords {797.0 571.0}
    labelcoords {797.0 603.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.254
	
	}
    }
    interface-peer {eth0 n9}
}

node n31 {
    type router
    model PC
    network-config {
	hostname n31
	!
	interface eth0
	 ip address 10.0.1.228/27
	!
    }
    canvas c1
    iconcoords {555.0 566.0}
    labelcoords {555.0 598.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.254
	
	}
    }
    services {DefaultRoute}
    interface-peer {eth0 n9}
}

node n32 {
    type router
    model PC
    network-config {
	hostname n32
	!
	interface eth0
	 ip address 10.0.1.227/27
	!
    }
    canvas c1
    iconcoords {676.0 645.0}
    labelcoords {676.0 677.0}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 10.0.1.254
	
	}
    }
    services {DefaultRoute}
    interface-peer {eth0 n9}
}

node n9 {
    type hub
    network-config {
	hostname n9
	!
    }
    canvas c1
    iconcoords {684.0 551.0}
    labelcoords {684.0 575.0}
    interface-peer {e0 n29}
    interface-peer {e1 n30}
    interface-peer {e2 n32}
    interface-peer {e3 n31}
    interface-peer {e4 n4}
}

node n4 {
    type router
    model router
    network-config {
	hostname n4
	!
	interface eth2
	 ip address 10.0.1.254/27
	!
	interface eth1
	 ip address 196.168.0.10/30
	!
	interface eth0
	 ip address 196.168.0.13/30
	!
    }
    canvas c1
    iconcoords {616.0 457.0}
    labelcoords {616.0 489.0}
    interface-peer {eth0 n3}
    interface-peer {eth1 n7}
    interface-peer {eth2 n9}
    custom-config {
	custom-config-id service:zebra
	custom-command zebra
	config {
	files=('/usr/local/etc/quagga/Quagga.conf', 'quaggaboot.sh', '/usr/local/etc/quagga/vtysh.conf', )
	}
    }
    custom-config {
	custom-config-id service:zebra:/usr/local/etc/quagga/Quagga.conf
	custom-command /usr/local/etc/quagga/Quagga.conf
	config {
	interface eth0
	  ip address 196.168.0.13/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth1
	  ip address 196.168.0.10/30
	  ip ospf network point-to-point
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	interface eth2
	  ip address 10.0.1.254/27
	  ip ospf hello-interval 2
	  ip ospf dead-interval 6
	  ip ospf retransmit-interval 5
	  
	!
	router ospf
	  router-id 196.168.0.13
	  network 196.168.0.13/30 area 0
	  network 196.168.0.10/30 area 0
	  network 10.0.1.254/27 area 0
	!
	router ospf6
	  instance-id 65
	  router-id 196.168.0.13
	  interface eth0 area 0.0.0.0
	  interface eth1 area 0.0.0.0
	  interface eth2 area 0.0.0.0
	!
	ip route 10.0.0.0/24 196.168.0.14
	ip route 10.0.1.128/26 196.168.0.14
	ip route 10.0.1.0/25 196.168.0.9
	ip route 10.0.1.192/27 196.168.0.14
	!
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	#ip route add default via 196.168.0.13
	
	}
    }
    services {zebra IPForward}
}

link l1 {
    nodes {n1 n2}
    bandwidth 0
}

link l2 {
    nodes {n2 n7}
    bandwidth 0
}

link l5 {
    nodes {n5 n1}
    bandwidth 0
}

link l6 {
    nodes {n5 n3}
    bandwidth 0
}

link l7 {
    nodes {n3 n6}
    bandwidth 0
}

link l8 {
    nodes {n6 n2}
    bandwidth 0
}

link l9 {
    nodes {n12 n3}
    bandwidth 0
}

link l11 {
    nodes {n2 n13}
    bandwidth 0
}

link l12 {
    nodes {n10 n13}
    bandwidth 0
}

link l15 {
    nodes {n15 n8}
    bandwidth 0
}

link l16 {
    nodes {n14 n8}
    bandwidth 0
}

link l17 {
    nodes {n16 n8}
    bandwidth 0
}

link l21 {
    nodes {n24 n10}
    bandwidth 0
}

link l22 {
    nodes {n25 n10}
    bandwidth 0
}

link l23 {
    nodes {n26 n13}
    bandwidth 0
}

link l24 {
    nodes {n13 n28}
    bandwidth 0
}

link l25 {
    nodes {n13 n27}
    bandwidth 0
}

link l30 {
    nodes {n12 n22}
    bandwidth 0
}

link l31 {
    nodes {n21 n12}
    bandwidth 0
}

link l32 {
    nodes {n23 n12}
    bandwidth 0
}

link l33 {
    nodes {n20 n12}
    bandwidth 0
}

link l13 {
    nodes {n19 n8}
    bandwidth 0
}

link l14 {
    nodes {n17 n8}
    bandwidth 0
}

link l18 {
    nodes {n18 n8}
    bandwidth 0
}

link l19 {
    nodes {n8 n1}
    bandwidth 0
}

link l10 {
    nodes {n29 n9}
    bandwidth 0
}

link l20 {
    nodes {n30 n9}
    bandwidth 0
}

link l26 {
    nodes {n32 n9}
    bandwidth 0
}

link l27 {
    nodes {n31 n9}
    bandwidth 0
}

link l3 {
    nodes {n3 n4}
    bandwidth 0
}

link l4 {
    nodes {n7 n4}
    bandwidth 0
}

link l28 {
    nodes {n4 n9}
    bandwidth 0
}

annotation a2 {
    type text
    iconcoords {337.0 72.0}
    label {}
    canvas c1
}

annotation a1 {
    iconcoords {219.0 207.0}
    type text
    label {10.0.1.190/26}
    labelcolor #000000
    fontfamily {Arial}
    fontsize {11}
    canvas c1
}

annotation a3 {
    iconcoords {265.0 297.0}
    type text
    label {}
    labelcolor black
    fontfamily {Arial}
    fontsize {11}
    canvas c1
}

annotation a4 {
    type text
    iconcoords {132.0 408.0}
    label {}
    canvas c1
}

annotation a5 {
    type text
    iconcoords {76.0 401.0}
    label {}
    canvas c1
}

annotation a6 {
    type text
    iconcoords {568.0 277.0}
    label {}
    canvas c1
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

